package JSTD;
/**
 *
 * @author Philip
 */
public class JConsole{
    private java.io.PrintStream outStream;
    private java.io.BufferedReader readStream;
    
    public JConsole(){
            outStream = System.out;
            readStream = new java.io.BufferedReader(new java.io.InputStreamReader(System.in));
            System.setErr(outStream);
    }
    
    public String readLine()
    {
        try
        {
            return readStream.readLine();
        }
        catch(java.io.IOException ex)
        {
            ex.printStackTrace();
            return null;
        }
    }
    
    public char read()
    {
        try
        {
            return (char)readStream.read();
        }
        catch(java.io.IOException ex)
        {
            ex.printStackTrace();
            return 0;
        }
    }
    
    public void write(Object o)
    {
        outStream.print(o);
    }
    
    public void write(String s)
    {
        outStream.print(s);
    }
    
    public void write(boolean b)
    {
        outStream.print(b);
    }
    
    public void write(char c)
    {
        outStream.print(c);
    }
    
    public void write(char[] c)
    {
        outStream.print(c);
    }
    
    public void write(double d)
    {
        outStream.print(d);
    }
    
    public void write(int i)
    {
        outStream.print(i);
    }
    
    public void write(long l)
    {
        outStream.print(l);
    }
    
    public void write(float f)
    {
        outStream.print(f);
    }
    
    public void write(byte[] b)
    {
        outStream.print(new String(b));
    
    }
    public void writeLine() 
    {
        outStream.println();
    }
       
    public void writeLine(String s)
    {
        outStream.println(s);
    }
    
    public void writeLine(byte[] b)
    {
        outStream.println(new String(b));
    }
    
    public void writeLine(Object o)
    {
        outStream.println(o);
    
    }
    
    public void writeLine(char c) 
    {
        outStream.println(c);
    }
    
    public void writeLine(char[] c) 
    {
        outStream.println(c);
    }
            
    public void writeLine(int i) 
    {
        outStream.println(i);
    }
    
    public void writeLine(double d) 
    {
        outStream.println(d);
    }
    
    public void writeLine(float f) 
    {
        outStream.println(f);
    }
    
    public void writeLine(long l) 
    {
        outStream.println(l);
    }
    
    public void writeLine(boolean b) 
    {
        outStream.println(b);
    }
    
    public void dispose() 
    {
        outStream.close();
        try
        {
            readStream.close();
        }
        catch(java.io.IOException ex)
        {
            ex.printStackTrace();
        }
        try 
        {
            this.finalize();
        } 
        catch (java.lang.Throwable ex) 
        {
            ex.printStackTrace();
        }
    }
}
